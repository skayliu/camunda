# This workflow runs our daily scheduled acceptance tests. It runs each test suite against the
# development head (e.g. main) and all officially supported branches.
#
# As this is meant to be run via scheduling, the workflow itself only runs on the default branch
# (e.g. main), so any changes you make will affect any other branches we test via this workflow.
name: Daily tests

on:
  workflow_dispatch: { }
  schedule:
    # Runs at 01:00 every day; see this link for more: https://crontab.guru/#0_1_*_*_*
    - cron: '0 1 * * *'

env:
  # This URL is used as the business key for the various QA workflows
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  # This job will figure out the last supported versions based on the latest tags.
  #
  # Versions around found by sorting the tags, removing any that doesn't match semantic version,
  # and ignoring those with suffixes, and sort in natural order reversed. To get the second-highest
  # minor branch, we do the same, but we also filter out any versions which match the minor version
  # of the latest stable version.
  get-versions:
    name: Compute branch matrix
    runs-on: ubuntu-latest
    outputs:
      latest-version: ${{ env.LATEST_VERSION }}
      previous-latest-version: ${{ env.PREVIOUS_LATEST_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --tags
      - run: |
          latest=$(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sed -E -e 's/\.[0-9]+$//' | sort -Vr | head -n1)
          previous=$(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sed -E -e 's/\.[0-9]+$//' | grep -v "${latest}" | sort -Vr | head -n1)
          if [ ! -z $latest ] && [ ! -z $previous ]; then
            echo "Successfully computed latest versions: ${latest} and ${previous}"
          else
            echo "Failed to compute latest versions"
          fi
          echo "LATEST_VERSION=${latest}" >> $GITHUB_ENV
          echo "PREVIOUS_LATEST_VERSION=${previous}" >> $GITHUB_ENV
  # Runs the qa-testbench workflow against the stable branches. It assumes that branches follow the
  # pattern of `stable/VERSION`, and generations of `Zeebe VERSION`.
  #
  # NOTE: it's not possible to use the env context in a matrix, which is why we use job outputs
  # here.
  qa:
    needs:
      - get-versions
    strategy:
      # do not cancel other jobs if one fails
      fail-fast: false
      matrix:
        branch:
          - 'main'
          - ${{ format('stable/{0}', needs.get-versions.outputs.latest-version) }}
          - ${{ format('stable/{0}', needs.get-versions.outputs.previous-latest-version) }}
    name: Daily QA
    uses: ./.github/workflows/qa-testbench.yaml
    with:
      branch: ${{ matrix.branch }}
      generation: Zeebe SNAPSHOT
    secrets: inherit
